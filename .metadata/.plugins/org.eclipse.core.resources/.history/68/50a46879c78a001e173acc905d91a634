package org.cibertec.edu.pe.restService;

import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

import org.cibertec.edu.pe.entities.Habitacion;
import org.cibertec.edu.pe.entities.Reservacion;
import org.cibertec.edu.pe.entities.ReservacionRequest;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.bind.annotation.RequestBody;


@Service
public class HabitacionService {

	private Logger logger = LoggerFactory.getLogger(HabitacionService.class);

	@Autowired
	private RestTemplate restTemplate;
	
	@Value("${api.habitacion.baseUri}")
	private String habitacionBaseUri;
	
	@Value("${api.reservacion.baseUri}")
	private String reservacionBaseUri;
	
	public List<Habitacion> getHabitaciones() {
		List<Habitacion> responseUser = new ArrayList<Habitacion>();
		try {
				List<Habitacion> response = restTemplate.exchange(
						habitacionBaseUri + "habitacion/listar",
		                HttpMethod.GET,
		                null,
		                new ParameterizedTypeReference<List<Habitacion>>() {}
		            );
	            if (response.getStatusCode() == HttpStatus.OK) {
	                responseUser = response.getBody();
	                logger.info("Habitaciones recuperado exitosamente!");
	            }
		} catch (Exception e) {
			// TODO: handle exception
			logger.error("ERROR - " + e.getMessage());
		}
		return responseUser;
	}
	
	public Habitacion actualizarEstadoHabitacion(@RequestBody Habitacion dto) {
		Habitacion responseUser = new Habitacion();
		try {
			ResponseEntity<Habitacion> response = restTemplate.exchange(
					habitacionBaseUri + "habitacion/actualizar",
					HttpMethod.PUT,
					new HttpEntity<>(dto),
					new ParameterizedTypeReference<Habitacion>() {}
					);
			if (response.getStatusCode() == HttpStatus.OK) {
				responseUser = response.getBody();
                logger.info("Habitaciones actualziada exitosamente!");
			}
		} catch (Exception e) {
			logger.error("ERROR - " + e.getMessage());
		}
		return responseUser;
	}
	
	public Reservacion guardar(@RequestBody ReservacionRequest dto) {
		Reservacion responseUser = new Reservacion();
		try {
			ResponseEntity<Reservacion> response = restTemplate.exchange(
					reservacionBaseUri + "reservacion/guardar",
					HttpMethod.PUT,
					new HttpEntity<>(dto),
					new ParameterizedTypeReference<Reservacion>() {}
					);
			if (response.getStatusCode() == HttpStatus.OK) {
				responseUser = response.getBody();
                logger.info("Habitaciones recuperado exitosamente!");
			}
		} catch (Exception e) {
			logger.error("ERROR - " + e.getMessage());
		}
		return responseUser;
	}
	
}
